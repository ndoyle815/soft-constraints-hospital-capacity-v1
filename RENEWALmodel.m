function [out] = RENEWALmodel(Rvals,tvals,w,I0,maxtime,Rtype,para)
% function simulates an outbreak generated by a renewal model with inputs:
% Rvals:   Instantaneous R_t values at intervention changes
% tvals:   Times where interventions change
% w:       Serial interval distribution
% I0:      Initial cases
% maxtime: Simulation end time
% Rtype:   Set to 'Case' if computing the case reproduction number

% temporary maxtime to avoid R depletion towards simulation end
xtend = 15;
T = maxtime + xtend;
tvals(end+1) = T;
w(end+1:end+xtend) = zeros(1,xtend);

% setup - generate instantaneous R timeseries
R = zeros(1,T);

for j = 1:length(tvals)-1
    R(tvals(j):tvals(j+1)-1) = Rvals(j).*ones(1,tvals(j+1)-tvals(j));
end

R(T) = Rvals(end);

% obtain case reproduction number if required
if isequal(Rtype,'Case')

    Rc = zeros(size(R));
    Rc(end) = R(end);

    for t = T-1:-1:1
        s = 1:T-t;
        Rc(t) = sum(R(t+s).*w(s),2);
    end

    R = Rc;
end

% shorten T
T = T - xtend;
alltimes = 1:T;
R(end-xtend+1:end) = [];
w(end-xtend+1:end) = [];

% store estimated cases for all times
Its = zeros(1,T);
Its(1) = I0;
ExpIts = Its;

% simulate outbreak
for t = 2:T

    % generate new cases
    s = 1:t-1;
    ExpIts(t) = R(t).*sum(w(s).*ExpIts(t-s),2);

    % sample from Poisson distribution with above mean
    % need to take intervention changes into account
    Its(t) = poissrnd(ExpIts(t));

end

% new hospitalisations
LL = 1:length(para.Dist_SH);
new_Hosp = zeros(1,length(alltimes)+LL(end));
for T = 1:length(alltimes)
    new_Hosp(T+LL) = new_Hosp(T+LL) + para.Dist_SH*(ExpIts(T).*(para.ha)');
end

% new ICU admissions
LL = 1:length(para.Dist_SC);
new_ICU = zeros(1,length(alltimes)+LL(end));
for T = 1:length(alltimes)
    new_ICU(T+LL) = new_ICU(T+LL) + para.Dist_SC*(ExpIts(T).*(para.ca)');
end

% in Hospital
LL_H  = 1:length(para.Time_H);
LL_HC = 1:length(para.Time_HC);
LL = 1:max(LL_H(end),LL_HC(end));
in_Hosp = zeros(1,length(alltimes)+LL(end));
for T = 1:length(alltimes)
    in_Hosp(T+LL_H-1)  = in_Hosp(T+LL_H-1) + para.dt.*para.Time_H*new_Hosp(T);
    in_Hosp(T+LL_HC-1) = in_Hosp(T+LL_HC-1) + para.dt.*para.Time_HC*new_ICU(T);
end

% in ICU
LL = 1:length(para.Time_C);
in_ICU = zeros(1,length(alltimes)+LL(end));
for T = 1:length(alltimes)
    in_ICU(T+LL-1) = in_ICU(T+LL-1) + para.dt.*para.Time_C*new_ICU(T);
end

% new deaths
LL = 1:length(para.Dist_HM);
new_Deaths = zeros(1,length(alltimes)+LL(end));
for T = 1:length(alltimes)
    new_Deaths(T+LL) = new_Deaths(T+LL) + para.Dist_HM*(new_Hosp(T).*(para.ma)');
end

new_Hosp(length(alltimes)+1:end)=[];
in_Hosp(length(alltimes)+1:end)=[];
new_ICU(length(alltimes)+1:end)=[];
in_ICU(length(alltimes)+1:end)=[];
new_Deaths(length(alltimes)+1:end)=[];

% save outputs as a structure
out = struct('Its',Its, 'ExpIts',ExpIts, 'R',R, 't',alltimes, 'new_Hosp',new_Hosp, 'new_ICU',new_ICU, 'in_Hosp',in_Hosp, 'in_ICU',in_ICU, 'new_Deaths',new_Deaths);
